# Docker Compose configuration for Desktop AI Search
# This provides a complete development and production environment

version: '3.8'

services:
  desktop-ai-search:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: desktop-ai-search
    ports:
      - "8080:8080"
    volumes:
      # Data persistence
      - ./data:/app/data
      - ./logs:/app/logs
      - ./cache:/app/cache
      # Configuration
      - ./config.toml:/app/config.toml:ro
      # Documents to index (mount your documents directory)
      - ./documents:/app/documents:ro
    environment:
      - RUST_LOG=info
      - DESKTOP_AI_SEARCH_CONFIG_PATH=/app/config.toml
      - DESKTOP_AI_SEARCH_DATA_DIR=/app/data
      - DESKTOP_AI_SEARCH_LOG_DIR=/app/logs
      - DESKTOP_AI_SEARCH_CACHE_DIR=/app/cache
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/app/desktop-ai-search", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for caching (if implemented)
  redis:
    image: redis:7-alpine
    container_name: desktop-ai-search-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - redis

  # Optional: Prometheus for metrics (if implemented)
  prometheus:
    image: prom/prometheus:latest
    container_name: desktop-ai-search-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    profiles:
      - monitoring

  # Optional: Grafana for visualization (if implemented)
  grafana:
    image: grafana/grafana:latest
    container_name: desktop-ai-search-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    depends_on:
      - prometheus
    profiles:
      - monitoring

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: desktop-ai-search-network